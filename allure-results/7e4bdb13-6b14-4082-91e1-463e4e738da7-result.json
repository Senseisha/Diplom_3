{"name": "Тест успешного перехода в Личный кабинет", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: chrome=132.0.6834.196)\nStacktrace:\n\tGetHandleVerifier [0x00007FF729726CF5+28821]\n\t(No symbol) [0x00007FF729693880]\n\t(No symbol) [0x00007FF72953578A]\n\t(No symbol) [0x00007FF729532E88]\n\t(No symbol) [0x00007FF729523BF9]\n\t(No symbol) [0x00007FF72952594F]\n\t(No symbol) [0x00007FF729523EBF]\n\t(No symbol) [0x00007FF72952371B]\n\t(No symbol) [0x00007FF72952365A]\n\t(No symbol) [0x00007FF729521274]\n\t(No symbol) [0x00007FF729521B3C]\n\t(No symbol) [0x00007FF72953885A]\n\t(No symbol) [0x00007FF7295D01FE]\n\t(No symbol) [0x00007FF7295AF2FA]\n\t(No symbol) [0x00007FF7295CF412]\n\t(No symbol) [0x00007FF7295AF0A3]\n\t(No symbol) [0x00007FF72957A778]\n\t(No symbol) [0x00007FF72957B8E1]\n\tGetHandleVerifier [0x00007FF729A5FCED+3408013]\n\tGetHandleVerifier [0x00007FF729A7745F+3504127]\n\tGetHandleVerifier [0x00007FF729A6B63D+3455453]\n\tGetHandleVerifier [0x00007FF7297EBDFB+835995]\n\t(No symbol) [0x00007FF72969EB9F]\n\t(No symbol) [0x00007FF72969A854]\n\t(No symbol) [0x00007FF72969A9ED]\n\t(No symbol) [0x00007FF72968A1D9]\n\tBaseThreadInitThunk [0x00007FFAEB4A7374+20]\n\tRtlUserThreadStart [0x00007FFAEC57CC91+33]", "trace": "request = <SubRequest 'driver' for <Function test_successful_transition[chrome]>>\n\n    @pytest.fixture(params=[\"chrome\", \"firefox\"])\n    def driver(request):\n        if request.param == \"chrome\":\n            driver = webdriver.Chrome()\n            driver.set_window_size(1920, 1080)\n>           driver.get(main_site)\n\ntests\\conftest.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in get\n    self.execute(Command.GET, {\"url\": url})\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002258723CA48>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...07FF72968A1D9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAEB4A7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFAEC57CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: chrome=132.0.6834.196)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF729726CF5+28821]\nE       \t(No symbol) [0x00007FF729693880]\nE       \t(No symbol) [0x00007FF72953578A]\nE       \t(No symbol) [0x00007FF729532E88]\nE       \t(No symbol) [0x00007FF729523BF9]\nE       \t(No symbol) [0x00007FF72952594F]\nE       \t(No symbol) [0x00007FF729523EBF]\nE       \t(No symbol) [0x00007FF72952371B]\nE       \t(No symbol) [0x00007FF72952365A]\nE       \t(No symbol) [0x00007FF729521274]\nE       \t(No symbol) [0x00007FF729521B3C]\nE       \t(No symbol) [0x00007FF72953885A]\nE       \t(No symbol) [0x00007FF7295D01FE]\nE       \t(No symbol) [0x00007FF7295AF2FA]\nE       \t(No symbol) [0x00007FF7295CF412]\nE       \t(No symbol) [0x00007FF7295AF0A3]\nE       \t(No symbol) [0x00007FF72957A778]\nE       \t(No symbol) [0x00007FF72957B8E1]\nE       \tGetHandleVerifier [0x00007FF729A5FCED+3408013]\nE       \tGetHandleVerifier [0x00007FF729A7745F+3504127]\nE       \tGetHandleVerifier [0x00007FF729A6B63D+3455453]\nE       \tGetHandleVerifier [0x00007FF7297EBDFB+835995]\nE       \t(No symbol) [0x00007FF72969EB9F]\nE       \t(No symbol) [0x00007FF72969A854]\nE       \t(No symbol) [0x00007FF72969A9ED]\nE       \t(No symbol) [0x00007FF72968A1D9]\nE       \tBaseThreadInitThunk [0x00007FFAEB4A7374+20]\nE       \tRtlUserThreadStart [0x00007FFAEC57CC91+33]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "attachments": [{"name": "log", "source": "6c1811ea-71c2-4b64-bcdb-3eb9432893f7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1739721704923, "stop": 1739721704923, "uuid": "642297d5-ccb4-4837-b5c3-429bdb20c0ae", "historyId": "55efa03d51f107e0f02dee921604419c", "testCaseId": "92a1e3198819676ad856f50a0868c5e8", "fullName": "tests.test_personal_account.TestPersonalAccount#test_successful_transition", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_personal_account"}, {"name": "subSuite", "value": "TestPersonalAccount"}, {"name": "host", "value": "LAPTOP-2J5GITAM"}, {"name": "thread", "value": "20312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_personal_account"}]}